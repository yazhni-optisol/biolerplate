{
  "openapi": "3.0.1",
  "info": {
    "title": "NodeJS Boilerplate",
    "description": "NodeJS Boilerplate code for all modules.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Basic Authentication"
    },
    {
      "name": "Admin",
      "description": "Admin functionalities"
    },
    {
      "name": "User",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create user",
        "description": "Register a new user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Create User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Log in user",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User Email"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for the account"
                  }
                }
              },
              "examples": {
                "Admin": {
                  "$ref": "#/components/examples/Admin"
                },
                "User": {
                  "$ref": "#/components/examples/User"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/auth/forgot_password": {
      "post": {
        "tags": ["Auth"],
        "summary": "Forgot Password",
        "operationId": "forgotPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User Email"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Email sent successfully.",
            "content": {}
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/auth/reset_password_email/{reset_password_token}": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset Password",
        "operationId": "resetPassword",
        "parameters": [
          {
            "name": "reset_password_token",
            "in": "path",
            "description": "reset password token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "password": {
                    "type": "string",
                    "description": "password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password updated Successfully.",
            "content": {}
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/auth/reset_password_otp": {
      "post": {
        "tags": ["Auth"],
        "summary": "Reset Password by OTP",
        "operationId": "resetPasswordOTP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "email"
                  },
                  "password": {
                    "type": "string",
                    "description": "password"
                  },
                  "otpCode": {
                    "type": "string",
                    "description": "otp"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password updated Successfully.",
            "content": {}
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/auth/verify_email/{registration_token}": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify email",
        "operationId": "verifyEmail",
        "parameters": [
          {
            "name": "registration_token",
            "in": "path",
            "description": "verification token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully verified",
            "content": {}
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/auth/verify_otp": {
      "post": {
        "tags": ["Auth"],
        "summary": "Verify OTP",
        "operationId": "verifyOTP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User Email"
                  },
                  "otpCode": {
                    "type": "string",
                    "description": "OTP for the account verification"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully verified",
            "content": {}
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/auth/facebook": {
      "get": {
        "tags": ["Auth"],
        "summary": "Facebook Login",
        "operationId": "facebookLogin",
        "responses": {
          "200": {
            "description": "Successfully verified",
            "content": {}
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Get user by user id",
        "operationId": "getUserById",
        "responses": {
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": ["User"],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "requestBody": {
          "description": "Updated user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableEntity"
          }
        },
        "x-codegen-request-body-name": "body",
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/users": {
      "get": {
        "tags": ["Admin"],
        "summary": "List all users",
        "operationId": "listUsers",
        "responses": {
          "200": {
            "description": "List of all users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    },
    "/admin/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "Id of the user",
          "required": true,
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      ],
      "get": {
        "tags": ["Admin"],
        "summary": "View user",
        "operationId": "adminViewUser",
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "put": {
        "tags": ["Admin"],
        "summary": "Update user",
        "operationId": "adminUpdateUser",
        "requestBody": {
          "description": "Update User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      },
      "delete": {
        "tags": ["Admin"],
        "summary": "Remove user",
        "operationId": "adminDeleteUser",
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserResponse"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "EditUser": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "CreateUser": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "email": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/EditUser"
          }
        ]
      },
      "User": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CreateUser"
          }
        ]
      },
      "Error": {
        "type": "object",
        "required": ["statusCode", "message"],
        "properties": {
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "ValidationError": {
        "required": ["message"],
        "properties": {
          "message": {
            "type": "object",
            "required": ["name", "message", "statusCode", "error", "details"],
            "properties": {
              "name": {
                "type": "string",
                "description": "ValidationError"
              },
              "message": {
                "type": "string",
                "description": "Validation Failed"
              },
              "statusCode": {
                "type": "integer",
                "description": "This will be 422 for this type of error"
              },
              "error": {
                "type": "string",
                "description": "Bad Request"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Validation failed fields will return"
                }
              }
            }
          },
          "stack": {
            "type": "string",
            "description": "Error stack will return"
          }
        }
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "examples": {
      "Admin": {
        "value": {
          "email": "admin@example.com",
          "password": "password"
        }
      },
      "User": {
        "value": {
          "email": "stephen.m@optisolbusiness.com",
          "password": "password"
        }
      }
    },
    "responses": {
      "UserResponse": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "BadRequest": {
        "description": "BadRequest",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "UnprocessableEntity": {
        "description": "Unprocessable Entity",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 422
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  }
}
